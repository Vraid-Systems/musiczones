
<project name="MulticastMusicController" default="dist" basedir=".">
    <description>
        build the node software for the LAN IPv4 multicast music controller system
    </description>
    
    <!-- global properties -->
    <property name="mainclass" value="multicastmusiccontroller.MulticastMusicController"/>
    
    <property name="src" location="src"/>
    <property name="contrib" location="contrib"/>
    <property name="build" location="build"/>
    <property name="dist" location="dist"/>
    <property name="docs" location="docs"/>
    <property name="debug" location="debug"/>
    
    <property name="init.mem.size" value="128m"/>
    <property name="max.mem.size" value="256m"/>
    
    <property name="javac.debug" value="true"/>
    <property name="optimize" value="true"/>
    <property name="jdk-version.source" value="1.5"/>
    <property name="jdk-version.target" value="1.5"/>


    <!-- initialize various path info -->
    <target name="init">
        <!-- add the jar libs -->
        <path id="jars">
            <fileset dir="${contrib}" includes="**/*.jar"/>
        </path>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
    </target>

    <!-- create the class files -->
    <target name="compile" depends="init" description="compile the source">
        <javac fork="true" srcdir="${src}" destdir="${build}" debug="${javac.debug}"
        memoryinitialsize="${init.mem.size}" memorymaximumsize="${max.mem.size}"
        target="${jdk-version.target}" source="${jdk-version.source}"
        optimize="${optimize}" classpathref="jars">
            <compilerarg value="-Xlint"/>
        </javac>
    </target>
    
    <!-- move static html, js, images into build directory for jar packaging -->
    <target name="copyfiles" description="copy static files into build">
        <mkdir dir="${build}/webapp"/>
        <copy todir="${build}/webapp">
            <fileset dir="${src}/webapp"/>
        </copy>
    </target>
    
    <!-- create the documentation from the class files -->
    <target name="javadoc" depends="compile" description="create component docs">
        <delete dir="${docs}"/>
        <mkdir dir="${docs}"/>
        
        <javadoc author="true" bottom="${component.title}" destdir="${docs}"
        source="${jdk-version.source}" doctitle="${component.title}"
        packagenames="*" access="protected" sourcepath="${src}"
        version="true" windowtitle="${component.title} (Version ${component.version})">
        </javadoc>
    </target>

    <!-- put together the jar package -->
    <target name="dist" depends="compile, copyfiles" description="generate the distribution">
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}"/>

        <!-- put everything in ${build} into the mmc.jar file -->
        <jar jarfile="${dist}/mmc.jar" basedir="${build}">
            <manifest>
                <attribute name="Main-Class" value="${mainclass}"/>
            </manifest>
            <zipgroupfileset dir="${contrib}" includes="**/*.jar"/>
        </jar>
    </target>
    
    <!-- run the packaged jar -->
    <target name="run" depends="dist" description="run the dist">
        <java jar="${dist}/mmc.jar" fork="true"/>
    </target>

    <!-- remove the created class and jar file/s -->
    <target name="clean" description="clean up">
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>
</project>
